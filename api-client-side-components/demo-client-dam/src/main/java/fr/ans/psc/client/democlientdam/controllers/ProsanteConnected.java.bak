/**
 * (c) Copyright 2023, ANS. All rights reserved.
 */
package fr.ans.psc.client.democlientdam.controllers;

import javax.servlet.http.HttpServletRequest;

import org.javatuples.Triplet;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.GetMapping;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;

import fr.ans.psc.client.democlientdam.tools.Helper;
import lombok.extern.slf4j.Slf4j;
@Slf4j
@Controller
public class ProsanteConnected {
	
	private final static String OIDC_ACCESS_TOKEN =  "oidc_access_token";

	@GetMapping("/psc")
	public String getApiToken(Model model, HttpServletRequest request) throws JsonMappingException, JsonProcessingException {
		log.debug("Demande de page d'accueil d'un utilisateur prosanté connecté");
		
		/*
		 * Lecture des headers (données renvoyées par le serveur uniquement dans le cadre d'une démontsration). 
		 */
		MultiValueMap<String, String> map = Helper.logRequestHeaders(request);
//		MultiValueMap<String, String> filetredMap = Helper.filtredMap(map);
//		model.addAttribute("mapHeaders",filetredMap);

		/*
		 * Identité PRosante Connect
		 */
	    String fullName = Helper.getFullName (map);
		model.addAttribute("user", fullName);
		
		/*
		 * Récupération du token et de ses caractéristiques ...
		 */

		Boolean bExisteToken = true;
//		Boolean bExisteToken = map.containsKey(OIDC_ACCESS_TOKEN);
		if (bExisteToken) {
//		String token = request.getHeader(OIDC_ACCESS_TOKEN);	
		
//		model.addAttribute("expDate", Helper.convertTimeStampToLocalDateTime(map.getFirst("oidc_claim_exp")));
//		model.addAttribute("iatDate", Helper.convertTimeStampToLocalDateTime(map.getFirst("oidc_claim_iat")));
			model.addAttribute("rawExpDate", map.getFirst("oidc_claim_exp"));
			model.addAttribute("rawIatDate", map.getFirst("oidc_claim_iat"));
			
			String token ="eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJKRlRBM1llVVdQbERCTEJfeU5qWUs0bWZJcTdhYXBBS21ieVdyczRPZ0RnIn0.eyJleHAiOjE2OTQ1MDk5ODYsImlhdCI6MTY5NDUwOTg2NiwiYXV0aF90aW1lIjoxNjk0NTA5ODY1LCJqdGkiOiJhNDFmMTRlOS1jYWRiLTQ2ZDktYjk5Mi00Zjg3NWJmYjk4OGYiLCJpc3MiOiJodHRwczovL2F1dGguYmFzLnBzYy5lc2FudGUuZ291di5mci9hdXRoL3JlYWxtcy9lc2FudGUtd2FsbGV0Iiwic3ViIjoiZjo1NTBkYzFjOC1kOTdiLTRiMWUtYWM4Yy04ZWI0NDcxY2Y5ZGQ6QU5TMjAyMjA3MjAxNTI4MTMiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJhbnMtcG9jLWNvbnRleHQtc2hhcmluZy1iYXMiLCJub25jZSI6IiIsInNlc3Npb25fc3RhdGUiOiJlY2E1ZWY5Mi1jZmNiLTRhYzItYmFiNi0yMTc0NjczMGY3NTAiLCJzY29wZSI6Im9wZW5pZCBzY29wZV9hbGwiLCJzaWQiOiJlY2E1ZWY5Mi1jZmNiLTRhYzItYmFiNi0yMTc0NjczMGY3NTAiLCJTdWJqZWN0TmFtZUlEIjoiQU5TMjAyMjA3MjAxNTI4MTMiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJBTlMyMDIyMDcyMDE1MjgxMyJ9.u-EjqYbLggmJyvEP4STlBbGP-BGqTEORJ2KLtI_XJFwGNWQoplW8U-7Vg7FHpPaMcLt1h22SwY5W6cSkJ9D49TYWAKDLkUBN_DD97hW7O-1rDZb9vWhqZJxxSouXQpKc8sRlquzBsw8PYXPe4OboSAOAotKrFkUhBlGxR01Qt_P-TOwRTH1VQKhBd2G5jokgJOFWBNGJyIW6bdvcbIoXWrbSfnqUMNj-NXEIPR-KSAun6SoeIsJalw1qZqb3a8bF8n6yBDfJD_rmmffcoorV8anK7NKmO9UkZRFpSJHvBxKHeArGD5R0er6M-t7WFSZ7M_5sxrCkifA_GQO5MLsbcA";
			String oidc_claim_exp = "1694524294";
			String oidc_claim_iat = "1694509894";
		
		
		model.addAttribute("expDate", Helper.convertTimeStampToLocalDateTime(oidc_claim_exp));
    	model.addAttribute("iatDate",Helper.convertTimeStampToLocalDateTime(oidc_claim_iat));
    			model.addAttribute("rawExpDate", oidc_claim_exp);
		model.addAttribute("rawIatDate", oidc_claim_iat);
				
		
		Triplet<String, String, String> tmp = Helper.splitAndDecodeToken(token);	
		//log.debug("token psc reçu: {} ", token);
		model.addAttribute("tokenHeader", tmp.getValue0());
		model.addAttribute("tokenBody",tmp.getValue1());
		}
		return "psc-connected";
	}
}
