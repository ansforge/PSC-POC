/*
 * eSignSante
 * API du composant eSignSante. <br>Ce composant dit de \"signature\" mutualise et homogénéise la mise en oeuvre des besoins autour de la signature. <br>Il permet de signer des documents ainsi que de vérifier la validité d'une signature ou d'un certificat.    <br>
 *
 * OpenAPI spec version: 2.5.0.11
 * Contact: esignsante@asipsante.fr
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fr.ans.esignsante.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.ans.esignsante.model.Rule;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * ConfVerifCert
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-04T13:37:15.229Z[GMT]")
public class ConfVerifCert implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("idVerifCertConf")
  private Long idVerifCertConf = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("rules")
  private List<Rule> rules = new ArrayList<Rule>();

  @JsonProperty("metaData")
  private List<String> metaData = null;

  public ConfVerifCert idVerifCertConf(Long idVerifCertConf) {
    this.idVerifCertConf = idVerifCertConf;
    return this;
  }

   /**
   * Identifiant de configuration. Cet identifiant est utilisé par le services de vérification de certificat.
   * @return idVerifCertConf
  **/
  @Schema(required = true, description = "Identifiant de configuration. Cet identifiant est utilisé par le services de vérification de certificat.")
  public Long getIdVerifCertConf() {
    return idVerifCertConf;
  }

  public void setIdVerifCertConf(Long idVerifCertConf) {
    this.idVerifCertConf = idVerifCertConf;
  }

  public ConfVerifCert description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description de la configuration de vérification des certificats.
   * @return description
  **/
  @Schema(required = true, description = "Description de la configuration de vérification des certificats.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConfVerifCert rules(List<Rule> rules) {
    this.rules = rules;
    return this;
  }

  public ConfVerifCert addRulesItem(Rule rulesItem) {
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @Schema(required = true, description = "")
  public List<Rule> getRules() {
    return rules;
  }

  public void setRules(List<Rule> rules) {
    this.rules = rules;
  }

  public ConfVerifCert metaData(List<String> metaData) {
    this.metaData = metaData;
    return this;
  }

  public ConfVerifCert addMetaDataItem(String metaDataItem) {
    if (this.metaData == null) {
      this.metaData = new ArrayList<String>();
    }
    this.metaData.add(metaDataItem);
    return this;
  }

   /**
   * Données complémentaires et paramétrables retournées par le service.
   * @return metaData
  **/
  @Schema(description = "Données complémentaires et paramétrables retournées par le service.")
  public List<String> getMetaData() {
    return metaData;
  }

  public void setMetaData(List<String> metaData) {
    this.metaData = metaData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfVerifCert confVerifCert = (ConfVerifCert) o;
    return Objects.equals(this.idVerifCertConf, confVerifCert.idVerifCertConf) &&
        Objects.equals(this.description, confVerifCert.description) &&
        Objects.equals(this.rules, confVerifCert.rules) &&
        Objects.equals(this.metaData, confVerifCert.metaData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idVerifCertConf, description, rules, metaData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfVerifCert {\n");
    
    sb.append("    idVerifCertConf: ").append(toIndentedString(idVerifCertConf)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
