/*
 * eSignSante
 * API du composant eSignSante. <br>Ce composant dit de \"signature\" mutualise et homogénéise la mise en oeuvre des besoins autour de la signature. <br>Il permet de signer des documents ainsi que de vérifier la validité d'une signature ou d'un certificat.    <br>
 *
 * OpenAPI spec version: 2.5.0.11
 * Contact: esignsante@asipsante.fr
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fr.ans.esignsante.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import fr.ans.esignsante.model.Erreur;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * ESignSanteSignatureReport
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-04T13:37:15.229Z[GMT]")
public class ESignSanteSignatureReport implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("erreurs")
  private List<Erreur> erreurs = new ArrayList<Erreur>();

  @JsonProperty("docSigne")
  private String docSigne = null;

  public ESignSanteSignatureReport erreurs(List<Erreur> erreurs) {
    this.erreurs = erreurs;
    return this;
  }

  public ESignSanteSignatureReport addErreursItem(Erreur erreursItem) {
    this.erreurs.add(erreursItem);
    return this;
  }

   /**
   * Get erreurs
   * @return erreurs
  **/
  @Schema(required = true, description = "")
  public List<Erreur> getErreurs() {
    return erreurs;
  }

  public void setErreurs(List<Erreur> erreurs) {
    this.erreurs = erreurs;
  }

  public ESignSanteSignatureReport docSigne(String docSigne) {
    this.docSigne = docSigne;
    return this;
  }

   /**
   * Le document signé encodé en base 64.
   * @return docSigne
  **/
  @Schema(required = true, description = "Le document signé encodé en base 64.")
  public String getDocSigne() {
    return docSigne;
  }

  public void setDocSigne(String docSigne) {
    this.docSigne = docSigne;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ESignSanteSignatureReport esignSanteSignatureReport = (ESignSanteSignatureReport) o;
    return Objects.equals(this.erreurs, esignSanteSignatureReport.erreurs) &&
        Objects.equals(this.docSigne, esignSanteSignatureReport.docSigne);
  }

  @Override
  public int hashCode() {
    return Objects.hash(erreurs, docSigne);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ESignSanteSignatureReport {\n");
    
    sb.append("    erreurs: ").append(toIndentedString(erreurs)).append("\n");
    sb.append("    docSigne: ").append(toIndentedString(docSigne)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
